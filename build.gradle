import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
	apply from: 'versions.gradle'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/jesusmadridry/product-common")
			credentials {
				username = project.findProperty("gpr_user_git")
				password = project.findProperty("gpr_key_git")
			}

		}
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	group = 'inventory.flow.app'
	version = "$jarVersion"

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		all {
			resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
		}
	}

	dependencyManagement {
		imports {
			mavenBom SpringBootPlugin.BOM_COORDINATES
		}
		overriddenByDependencies = false
	}

	dependencies {
		/************** PROD dependencies **************/

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		implementation "org.mapstruct:mapstruct:${mapstructVersion}"
		compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
		annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
		compileOnly "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructVersion}"
		annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructVersion}"


		/************** TEST dependencies **************/
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		if (System.getProperty("os.arch") == "aarch64") {
			testRuntimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.85.Final:osx-aarch_64'
		}

		testImplementation 'io.projectreactor:reactor-test'
		testImplementation "com.squareup.okhttp3:mockwebserver:${mockWebserverVersion}"

		testImplementation "org.mockito:mockito-core:${mockitoVersion}"
		testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
	}

	task allDeps(type: DependencyReportTask)

	// JACOCO START HERE
	tasks.named('test') {
		useJUnitPlatform()
	}

	test {
		testLogging {
			exceptionFormat = 'full'
		}
	}
}





